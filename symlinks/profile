# vim:ft=sh

# Use NeoVim if we have it
if command -v nvim > /dev/null; then
  VISUAL=nvim
else
  VISUAL=vim
fi
EDITOR=$VISUAL
export EDITOR VISUAL

if command -v most > /dev/null; then
  export PAGER=most
  export MANPAGER=most
fi

# If available, we use git to list files from the root directory (not from the
# current directory as in other fzf cases). Otherwise, fallback to ag
export FZF_DEFAULT_COMMAND='(git ls-files -co --exclude-standard $(git rev-parse --show-toplevel) || ag -l -g "") 2> /dev/null'
export FZF_DEFAULT_OPTS="--extended --bind alt-a:select-all,alt-d:deselect-all"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Case insensitive by default
export FZF_COMPLETION_OPTS='-i'

if [ -z "$XDG_CONFIG_HOME" ]; then
  export XDG_CACHE_HOME="$HOME/.cache"
  export XDG_CONFIG_HOME="$HOME/.config"
  export XDG_DATA_HOME="$HOME/.local/share"
fi

# Use local directory for n
export N_PREFIX="$HOME/.local"

# Use ag for faster default find command for listing candidates
if [ -d "$HOME/.local/source/fzf/" ]; then
  _fzf_compgen_path() {
    ag -g "" "$1"
  }
fi

# Helper function for sourcing a file only if it exists
function sourceIfExists() {
  for file in $@; do
    if [ -f "$file" ]; then
      source "$file"
    fi
  done
}

export -f sourceIfExists

# Use yank command for clipboard access via SSH or system clipboard
export LPASS_CLIPBOARD_COMMAND=yank

if command -v keychain &>/dev/null; then
  # Don't prompt for password to load id_rsa if not already loaded
  eval "$(keychain --eval --noask --agents ssh --quiet)"
else
  sourceIfExists "$HOME/.bashrc.ssh-agent"
fi

# Local overrides
sourceIfExists "$HOME/.profile.local"
